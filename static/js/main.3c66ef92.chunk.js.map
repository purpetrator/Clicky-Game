{"version":3,"sources":["components/DogCard/index.js","components/Wrapper/index.js","components/CardDiv/index.js","components/Header/index.js","components/Title/index.js","App.js","index.js"],"names":["DogCard","props","console","log","className","src","image","id","clicked","onClick","increaseScore","Wrapper","children","Header","Title","App","state","dogs","dogsClicked","score","message","dog","indexOf","alert","setState","shuffleArray","array","arraySort","sort","Math","random","this","CardDiv","map","doggy","key","Component","ReactDOM","render","document","getElementById"],"mappings":"k0BAmBeA,MAhBf,SAAiBC,GAEf,OADAC,QAAQC,IAAIF,GAEV,yBAAKG,UAAU,QACb,yBAAKA,UAAU,iBACb,yBACEC,IAAKJ,EAAMK,MACXC,GAAIN,EAAMM,GACVC,QAASP,EAAMO,QACfC,QAASR,EAAMS,mB,MCLVC,MAJf,SAAiBV,GACf,OAAO,yBAAKG,UAAU,WAAWH,EAAMW,W,MCG1BD,MAJf,SAAiBV,GACf,OAAO,yBAAKG,UAAU,aAAaH,EAAMW,W,MCG5BC,MAJf,SAAgBZ,GACd,OAAO,4BAAQG,UAAU,UAAUH,EAAMW,W,MCG5BE,MAJf,SAAeb,GACb,OAAO,wBAAIG,UAAU,SAASH,EAAMW,W,OC0EvBG,E,2MApEbC,MAAQ,CACNC,OACAC,YAAa,GACbC,MAAO,EACPC,QAAS,I,EAIXV,cAAgB,SAAAW,GAEV,EAAKL,MAAME,YAAYI,QAAQD,EAAId,KAAO,GAC5CgB,MAAM,YACN,EAAKC,SAAS,CACZP,OACAC,YAAa,GACbC,MAAO,EACPC,QAAS,gBAIX,EAAKI,SAAS,CACZL,MAAO,EAAKH,MAAMG,MAAQ,EAC1BD,YAAY,GAAD,mBAAM,EAAKF,MAAME,aAAjB,CAA8BG,EAAId,OAE/CL,QAAQC,IAAI,EAAKa,MAAME,aACvB,EAAKO,aAAa,EAAKT,MAAMC,OAG3B,EAAKD,MAAMG,OAAS,GACtBI,MAAM,Y,EAKVE,aAAe,SAAAC,GACb,IAAIC,EAAYD,EAAME,MAAK,kBAAMC,KAAKC,SAAW,MACjD,EAAKN,SAAS,CAAEP,KAAMU,K,wEAGd,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,wBAAIvB,UAAU,QAAd,gBACA,wBAAIA,UAAU,SAAd,mEAFF,UAKU2B,KAAKf,MAAMG,MACnB,6BAAMY,KAAKf,MAAMI,WAGrB,kBAACY,EAAD,KACGD,KAAKf,MAAMC,KAAKgB,KAAI,SAAAC,GAAK,OACxB,kBAAC,EAAD,CACE3B,GAAI2B,EAAM3B,GACV4B,IAAKD,EAAM3B,GACXD,MAAO4B,EAAM5B,MACbE,QAAS0B,EAAM1B,QACfE,cAAe,kBAAM,EAAKA,cAAcwB,e,GA7DpCE,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3c66ef92.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction DogCard(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img\r\n          src={props.image}\r\n          id={props.id}\r\n          clicked={props.clicked}\r\n          onClick={props.increaseScore}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"container\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n  return <header className=\"header\">{props.children}</header>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport DogCard from \"./components/DogCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport CardDiv from \"./components/CardDiv\";\r\nimport Header from \"./components/Header\";\r\nimport Title from \"./components/Title\";\r\nimport dogs from \"./dogs.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.dogs to the dogs json array\r\n  state = {\r\n    dogs,\r\n    dogsClicked: [],\r\n    score: 0,\r\n    message: \"\"\r\n  };\r\n\r\n  // function to increase score\r\n  increaseScore = dog => {\r\n    // check each index of dogsClicked array to see if it exists\r\n    if (this.state.dogsClicked.indexOf(dog.id) > -1) {\r\n      alert(`you lose`);\r\n      this.setState({\r\n        dogs,\r\n        dogsClicked: [],\r\n        score: 0,\r\n        message: \"You lose!\"\r\n      });\r\n    } else {\r\n      // if it doesn't exist, increase score by 1 and add the dog id to dogsClicked array\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n        dogsClicked: [...this.state.dogsClicked, dog.id]\r\n      });\r\n      console.log(this.state.dogsClicked);\r\n      this.shuffleArray(this.state.dogs);\r\n    }\r\n\r\n    if (this.state.score >= 8) {\r\n      alert(`you win`);\r\n    }\r\n  };\r\n\r\n  // function to shuffle dogArray\r\n  shuffleArray = array => {\r\n    var arraySort = array.sort(() => Math.random() - 0.5);\r\n    this.setState({ dogs: arraySort });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Header>\r\n          <Title>\r\n            <h3 className=\"game\">Clicky Game!</h3>\r\n            <h4 className=\"title\">\r\n              Click the dogs to score points, but don't click more than once!\r\n            </h4>\r\n            Score: {this.state.score}\r\n            <div>{this.state.message}</div>\r\n          </Title>\r\n        </Header>\r\n        <CardDiv>\r\n          {this.state.dogs.map(doggy => (\r\n            <DogCard\r\n              id={doggy.id}\r\n              key={doggy.id}\r\n              image={doggy.image}\r\n              clicked={doggy.clicked}\r\n              increaseScore={() => this.increaseScore(doggy)}\r\n            />\r\n          ))}\r\n        </CardDiv>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}